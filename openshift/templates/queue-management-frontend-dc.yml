---
kind: Template
apiVersion: v1
metadata:
  name: "queue-management-frontend"
parameters:
- name: NAME
  displayName: Name
  description: The suffix for all created objects
  required: false
  value: queue-management-frontend
- name: APPLICATION_DOMAIN
  description: "The exposed hostname that will route to the Vue application"
  value: "servicebc-cfms-dev.pathfinder.gov.bc.ca"
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    creationTimestamp: 
    labels:
      app: "${NAME}"
  spec:
    ports:
    - name: web
      protocol: TCP
      port: 2015
      targetPort: 2015
    selector:
      app: "${NAME}"
    type: ClusterIP
    sessionAffinity: None
- kind: Route
  apiVersion: v1
  metadata:
    name: "${NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    to:
      kind: Service
      name: "${NAME}"
    tls:
      termination: edge
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    creationTimestamp: 
    labels:
      app: queue-management
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 60
        maxUnavailable: 1
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          namespace: servicebc-cfms-tools
          name: "${NAME}:dev"
    replicas: 3
    revisionHistoryLimit: 10
    test: false
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    template:
      metadata:
        creationTimestamp: 
        labels:
          app: "${NAME}"
          deploymentconfig: "${NAME}"
      spec:
        containers:
        - name: "${NAME}"
          image: " "
          args:
            -  "/tmp/scripts/run"
          ports:
          - containerPort: 2015
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 2015
            timeoutSeconds: 3
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 2015
            timeoutSeconds: 3
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
