{
  "id": "3bdd95fe-76f8-4799-9fdb-ff156d9096c1",
  "name": "queue-management-dev",
  "values": [
    {
      "key": "url",
      "value": "https://servicebc-cfms-dev.pathfinder.gov.bc.ca/api/v1/",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "auth_url",
      "value": "https://dev-sso.pathfinder.gov.bc.ca",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "clientid",
      "value": "cfms-DEV",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "client_secret",
      "value": "b4d6a9f8-7a82-49d2-9fb9-44e9053d9bed",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "userid",
      "value": "cfms-postman-operator",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "password",
      "value": "pa55w0rd55555",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "realm",
      "value": "nest",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "auth_script",
      "value": "auth_url = pm.environment.get(\"auth_url\");\nrealm = pm.environment.get(\"realm\");\nclientid = pm.environment.get(\"clientid\");\nuserid = pm.environment.get(\"userid\");\npassword = pm.environment.get(\"password\");\nclient_secret = pm.environment.get(\"client_secret\");\n\nconst echoPostRequest = {\n  url: auth_url + '/auth/realms/' + realm + '/protocol/openid-connect/token',\n  method: 'POST',\n  header: 'Content-Type:application/x-www-form-urlencoded',\n  body: {\n    mode: 'raw',\n    raw: 'grant_type=password&client_id=' + clientid \n          + '&username=' + userid \n          + '&password=' + password\n          + '&client_secret=' + client_secret\n  }\n};\npm.sendRequest(echoPostRequest, function (err, res) {\n    var jsonData = res.json();\n    if (jsonData.hasOwnProperty('access_token')) {\n    \tpm.environment.set(\"token\", jsonData.access_token);\n\t    pm.environment.set(\"refresh_token\", jsonData.refresh_token);\n\t    console.log(err ? err : res.json());\n\t} else {\n\t    pm.environment.set(\"token\", 0);\n\t    pm.environment.set(\"refresh_token\", 0);\n\t    pm.environment.set(\"token_expires\", 0);\n\t    pm.environment.set(\"refresh_token_expires\", 0);\n\t}\n});",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "auth_token_script",
      "value": "auth_url = pm.environment.get(\"auth_url\");\nrealm = pm.environment.get(\"realm\");\nclientid = pm.environment.get(\"clientid\");\nuserid = pm.environment.get(\"userid\");\npassword = pm.environment.get(\"password\");\nclient_secret = pm.environment.get(\"client_secret\");\n\nconst echoPostRequest = {\n  url: authurl + '/auth/realms/' + realm + '/protocol/openid-connect/token',\n  method: 'POST',\n  header: 'Content-Type:application/x-www-form-urlencoded',\n  body: {\n    mode: 'raw',\n    raw: 'grant_type=password&client_id=' + clientid \n         + '&username=' + userid \n         + '&password=' + password\n         + '&client_secret=' + client_secret\n  }\n};\n\npm.sendRequest(echoPostRequest, function (err, res) {\n    if (err) { console.log(err); }\n    else {\n      var jsonData = res.json();\n      pm.environment.set(\"token\", jsonData.access_token);\n      pm.environment.set(\"refresh_token\", jsonData.refresh_token);\n      pm.environment.set(\"token_expires\", Date.now()+(jsonData.expires_in * 1000));\n      pm.environment.set(\"refresh_token_expires\", Date.now()+(jsonData.refresh_expires_in * 1000));\n    }\n    //console.log(err ? err : res.json());\n});",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "auth_refresh_script",
      "value": "auth_url = pm.environment.get(\"auth_url\");\nrealm = pm.environment.get(\"realm\");\nclientid = pm.environment.get(\"clientid\");\nrefresh_token = pm.environment.get(\"refresh_token\");\nclient_secret = pm.environment.get(\"client_secret\");\n\nconst echoPostRequest = {\n  url: authurl +'/auth/realms/' +realm + '/protocol/openid-connect/token',\n  method: 'POST',\n  header: 'Content-Type:application/x-www-form-urlencoded',\n  body: {\n    mode: 'raw',\n    raw: 'grant_type=refresh_token&client_id=' + clientid \n         + '&refresh_token=' + refresh_token \n         + '&client_secret=' + client_secret\n  }\n};\n\npm.sendRequest(echoPostRequest, function (err, res) {\n    var jsonData = res.json();\n    pm.environment.set(\"token\", jsonData.access_token);\n    pm.environment.set(\"refresh_token\", jsonData.refresh_token);\n    pm.environment.set(\"token_expires\", Date.now()+(jsonData.expires_in * 1000));\n    pm.environment.set(\"refresh_token_expires\", Date.now()+(jsonData.refresh_expires_in * 1000));\n\n    console.log(err ? err : res.json());\n});",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "token",
      "value": "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJEeEJ2b2dvUG1Lc0dFZnlkdnRVandDUF9sV18wd1V2b1NzV3F6NVFtRlFFIn0.eyJqdGkiOiI4YzY5MGNjMC1hNWQ1LTRkYWItOGFjNi1jMjkwMzQ3M2ZiNTciLCJleHAiOjE1MjkwMjE4MjAsIm5iZiI6MCwiaWF0IjoxNTI5MDIxNTIwLCJpc3MiOiJodHRwczovL2Rldi1zc28ucGF0aGZpbmRlci5nb3YuYmMuY2EvYXV0aC9yZWFsbXMvbmVzdCIsImF1ZCI6ImNmbXMtREVWIiwic3ViIjoiNjhhMjJlMGQtYmZjNi00MTk3LWFiODYtNDE2ZjY3ZTJiZTI4IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiY2Ztcy1ERVYiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiIzOTc0ZDk5OS1iOTAyLTQwZTUtYjQ5Yy0yMTM0NmUyMjM0ZmMiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbIioiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImNmbXNfb3BlcmF0b3IiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sIm5hbWUiOiJDRk1TIFBvc3RtYW4gT3BlcmF0b3IiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJjZm1zLXBvc3RtYW4tb3BlcmF0b3IiLCJnaXZlbl9uYW1lIjoiQ0ZNUyBQb3N0bWFuIiwiZmFtaWx5X25hbWUiOiJPcGVyYXRvciJ9.RTe-AgsXokK_EfhQRQ-z-woGXPvSiPeZgPsniXD1spRwt-O1sWqriRYAVXbwdUQepF7GZgl5Y-fMlNdR4YDI5zdz7A8jRsGV7gt7hjDXSheiYmp9ZQYRZmcs98pLxJl7-zlMY-nDkvUnTiXAVGiPG4r9yLGQ8r-3uBWMnwXFP7vlWSwWxuoLU1ufMvoJuWkbmHNUCid0kuQDZrLWhs9smgt4JbbU_9Hj48V7hWwXv7LZBeE4akWle8quw2DlHAXw8lpwvRJLaygoImr0QPlE9w_tUmMhGIICkxKygBFb4FsixyUbEQrxCppciZvtjwuwSlO4lO4oFP9Z3RaaMmty7w",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "refresh_token",
      "value": "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJEeEJ2b2dvUG1Lc0dFZnlkdnRVandDUF9sV18wd1V2b1NzV3F6NVFtRlFFIn0.eyJqdGkiOiIzNzY3ZWU3Yy05YjdkLTRkYjgtYjc4Yi1lZDFkYmU0MmZiYzkiLCJleHAiOjE1MjkwMjMzMjAsIm5iZiI6MCwiaWF0IjoxNTI5MDIxNTIwLCJpc3MiOiJodHRwczovL2Rldi1zc28ucGF0aGZpbmRlci5nb3YuYmMuY2EvYXV0aC9yZWFsbXMvbmVzdCIsImF1ZCI6ImNmbXMtREVWIiwic3ViIjoiNjhhMjJlMGQtYmZjNi00MTk3LWFiODYtNDE2ZjY3ZTJiZTI4IiwidHlwIjoiUmVmcmVzaCIsImF6cCI6ImNmbXMtREVWIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiMzk3NGQ5OTktYjkwMi00MGU1LWI0OWMtMjEzNDZlMjIzNGZjIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImNmbXNfb3BlcmF0b3IiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX19.COdguoOl9hV3SuAZaYg58-O105vyB1zZtPL75urHPqSi99PNP3pIwVZzISr4tejNx5k3-azGMKO-Xe1Ri7L6PjpkEaMKnlhauVG31450i7hgCKTnYjH_DbUHp0hvLsOC27HhUGkDeTCR1STQNJRC_C884F8Y-93Gq6ktuYKl0ZBBr3R6JuU9Jg_BV-EesY5Ay5cWhrtIIUOZqfWixpB842A6mTgpNRzjLP8hP3ZjzOzOYW0aunAE_H1dbFTUS-e7_EkoZYoub6uTxcamLGPRYpWO5BDtkEqInMnx9y5dNxSoMOhsDlY_sj3NyzuMn267Qy6UGQfaUAyU9wNdeqQxKA",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "token_expires",
      "value": 1528906318319,
      "enabled": true,
      "type": "text"
    },
    {
      "key": "refresh_token_expires",
      "value": 1528907818319,
      "enabled": true,
      "type": "text"
    },
    {
      "key": "nonoperator_userid",
      "value": "cfms-postman-non-operator",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "nonoperator_password",
      "value": "pa55w0rd55555no",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "operator_userid",
      "value": "cfms-postman-operator",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "operator_password",
      "value": "pa55w0rd5555",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "current_client",
      "value": "357010396248571905",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "current_queue",
      "value": "[\"357010419719045123\"]",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "client_add_tests",
      "value": "[ { \"name\" : \"Postman test client #1\" }, { \"name\" : \"Postman test client #2\" }, { \"name\" : \"Postman test client #3\" }, { \"name\" : \"Postman test client #4\" } ]",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "current_add_left",
      "value": "[\"Postman test client #2\",\"Postman test client #3\",\"Postman test client #4\"]",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "current_add_name",
      "value": "Postman test client #1",
      "enabled": true,
      "type": "text"
    },
    {
      "key": "putBody",
      "value": "{\"name\":\"Postman test client #1\"}",
      "enabled": true,
      "type": "text"
    }
  ],
  "_postman_variable_scope": "environment",
  "_postman_exported_at": "2018-06-15T00:29:16.936Z",
  "_postman_exported_using": "Postman/6.1.3"
}